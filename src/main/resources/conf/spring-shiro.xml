<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>
	
	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/user/getPublicKey.do = anon
				/asset/** = anon
				/servlet/validateCodeServlet = anon
				/** = authc
			</value>
		</constructor-arg>
	</bean>
    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/a/login.do" />
        <property name="successUrl" value="/a.do?login" />
        <property name="unauthorizedUrl" value="/" />
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <ref bean="shiroFilterChainDefinitions"/>
        </property>
    </bean>
    
    <!-- 表单提交过滤 -->
    <bean id="formAuthenticationFilter" class="com.shao.argrculture.common.security.FormAuthenticationFilter"/>
    
   <!-- 配置shiro bean processor-->  
   <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />  
    <!--myRealm 继承自AuthorizingRealm-->  
    <bean id="realmImpl" class="com.shao.argrculture.common.security.SampleAuthorizingRealm" ></bean>
    
    <!-- 静态注入 jedisShiroSessionRepository-->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
         <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />  
         <property name="arguments" ref="securityManager" />  
    </bean>
	
    <!-- session 创建、删除、查询 -->
	<bean id="jedisShiroSessionRepository" class="com.shao.argrculture.common.security.shiro.cache.JedisShiroSessionRepository" >
		 <property name="jedisManager" ref="jedisManager"/>
	</bean>
	
	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realmImpl" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="redisCacheManager" />
	</bean>  
	
	<!-- 自定义会话管理配置 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> 
	
		<property name="sessionDAO" ref="sessionDAO"/>
		
		<!-- 会话超时时间，单位：毫秒  -->
<!-- 		<property name="globalSessionTimeout" value="${session.sessionTimeout}"/> -->
		
		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
 		 <!-- session 监听，可以多个。 -->
	   <property name="sessionListeners">
	       <list>
	           <ref bean="customSessionListener"/>
	       </list>
	   </property>
	   <!-- 间隔多少时间检查，不配置是60分钟 -->	
<!-- 	  <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> -->
	  <!-- 是否开启 检测，默认开启 -->
	  <property name="sessionValidationSchedulerEnabled" value="true"/>
	   <!-- 是否删除无效的，默认也是开启 -->
	  <property name="deleteInvalidSessions" value="true"/>
 		
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookie.httpOnly" value="true"/>
<!-- 		<property name="sessionIdCookie.secure" value="true"/> -->
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>
	
	<!-- 定义授权缓存管理器 -->
	<bean id="redisCacheManager" class="com.shao.argrculture.common.security.shiro.cache.JedisCacheManager" /> 
	
	<!-- 自定义Session存储容器 -->
	<bean id="sessionDAO" class="com.shao.argrculture.common.security.shiro.session.JedisSessionDAO">
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" />
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
	</bean>
	
	<!-- custom shiro session listener -->
 	<bean id="customSessionListener" class="com.shao.argrculture.common.listener.CustomSessionListener">
	    <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
	</bean> 
		
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	    <constructor-arg name="name" value="dty_session_"/>
	    <property name="httpOnly" value="true"/>
    <!-- <property name="secure" value="true"/> -->
	</bean>
	
	<!-- 会话Session ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	
	<!-- redis 的缓存 -->
	<bean id="jedisManager" class="com.shao.argrculture.common.utils.JedisManager">
	    <property name="jedisPool" ref="jedisPool"/>
	</bean>
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
</beans>